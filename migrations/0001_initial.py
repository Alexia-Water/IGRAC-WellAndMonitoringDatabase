# Generated by Django 2.2.12 on 2020-08-10 04:53

import datetime
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('code', models.CharField(max_length=126)),
                ('geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='DrillingAndConstruction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driller', models.CharField(blank=True, max_length=512, null=True)),
                ('successful', models.BooleanField(blank=True, null=True)),
                ('pump_installer', models.CharField(blank=True, max_length=512, null=True)),
                ('pump_description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Geology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='HydrogeologyParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aquifer_name', models.CharField(blank=True, max_length=512, null=True)),
                ('aquifer_material', models.CharField(blank=True, max_length=512, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.TextField()),
                ('valid_from', models.DateField()),
                ('valid_until', models.DateField()),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Management',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manager', models.CharField(max_length=512, verbose_name='Manager / owner')),
                ('description', models.TextField(blank=True, null=True)),
                ('number_of_users', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Number of users / beneficiaries')),
            ],
        ),
        migrations.CreateModel(
            name='Quantity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Spring',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Name of information.', max_length=512, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(help_text='Location of the feature.', srid=4326, verbose_name='location')),
                ('address', models.TextField(blank=True, help_text='Address of the feature.', null=True)),
                ('photo', models.FileField(blank=True, null=True, upload_to='gwml2/photos/')),
                ('description', models.TextField(blank=True, help_text='Description of the feature.', null=True)),
                ('country', models.ForeignKey(blank=True, help_text='Country of the feature.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.Country')),
                ('drilling_and_construction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.DrillingAndConstruction')),
                ('elevation', models.ForeignKey(blank=True, help_text='Elevation of the feature.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.Quantity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TermAquiferType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TermConfinement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TermDrillingMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TermFeatureType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TermGroundwaterUse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TermMeasurementParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TermWellPurpose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Well',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Name of information.', max_length=512, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(help_text='Location of the feature.', srid=4326, verbose_name='location')),
                ('address', models.TextField(blank=True, help_text='Address of the feature.', null=True)),
                ('photo', models.FileField(blank=True, null=True, upload_to='gwml2/photos/')),
                ('description', models.TextField(blank=True, help_text='Description of the feature.', null=True)),
                ('original_id', models.CharField(max_length=256, unique=True)),
                ('country', models.ForeignKey(blank=True, help_text='Country of the feature.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.Country')),
                ('drilling_and_construction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.DrillingAndConstruction')),
                ('elevation', models.ForeignKey(blank=True, help_text='Elevation of the feature.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.Quantity')),
                ('feature_type', models.ForeignKey(blank=True, help_text='Type of the feature.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.TermFeatureType')),
                ('geology', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.Geology')),
                ('hydrogeology_parameter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.HydrogeologyParameter')),
                ('management', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.Management')),
                ('purpose', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.TermWellPurpose')),
            ],
            options={
                'ordering': ['original_id'],
            },
        ),
        migrations.CreateModel(
            name='WellDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('file', models.FileField(blank=True, null=True, upload_to='gwml2/document/')),
                ('file_path', models.CharField(blank=True, max_length=512, null=True)),
                ('description', models.TextField(blank=True, help_text='Description of the feature.', null=True)),
                ('well', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gwml2.Well')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WaterStrike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('depth', models.ForeignKey(blank=True, help_text='Top depth of feature', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.Quantity')),
                ('drilling_and_construction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.DrillingAndConstruction')),
            ],
        ),
        migrations.CreateModel(
            name='UnitGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('description', models.TextField(blank=True, null=True)),
                ('units', models.ManyToManyField(blank=True, null=True, to='gwml2.Unit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpringDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('file', models.FileField(blank=True, null=True, upload_to='gwml2/document/')),
                ('file_path', models.CharField(blank=True, max_length=512, null=True)),
                ('description', models.TextField(blank=True, help_text='Description of the feature.', null=True)),
                ('spring', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gwml2.Spring')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='spring',
            name='feature_type',
            field=models.ForeignKey(blank=True, help_text='Type of the feature.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.TermFeatureType'),
        ),
        migrations.AddField(
            model_name='spring',
            name='geology',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.Geology'),
        ),
        migrations.AddField(
            model_name='spring',
            name='hydrogeology_parameter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.HydrogeologyParameter'),
        ),
        migrations.AddField(
            model_name='spring',
            name='management',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.Management'),
        ),
        migrations.CreateModel(
            name='Screen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material', models.CharField(blank=True, help_text='material of the feature.', max_length=512, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('bottom_depth', models.ForeignKey(blank=True, help_text='Bottom depth of the feature', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='screening_bottom_depth', to='gwml2.Quantity')),
                ('diameter', models.ForeignKey(blank=True, help_text='Diameter of the feature', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='screening_diameter', to='gwml2.Quantity')),
                ('drilling_and_construction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.DrillingAndConstruction')),
                ('top_depth', models.ForeignKey(blank=True, help_text='Top depth of the feature', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='screening_top_depth', to='gwml2.Quantity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='quantity',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.Unit'),
        ),
        migrations.CreateModel(
            name='PumpingTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('porosity', models.FloatField(blank=True, null=True)),
                ('storativity', models.FloatField(blank=True, null=True, verbose_name='Storativity / Specific yield')),
                ('test_type', models.CharField(blank=True, max_length=512, null=True)),
                ('hydraulic_conductivity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pumping_test_hydraulic_conductivity', to='gwml2.Quantity')),
                ('specific_capacity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pumping_test_specific_capacity', to='gwml2.Quantity')),
                ('specific_storage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pumping_test_specific_storage', to='gwml2.Quantity')),
                ('transmissivity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pumping_test_transmissivity', to='gwml2.Quantity')),
            ],
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(blank=True, help_text='Reflects the time that the result applies to the measurement', null=True)),
                ('methodology', models.CharField(blank=True, help_text='Methodology of measurement.', max_length=512, null=True)),
                ('parameter', models.ForeignKey(blank=True, help_text='This shall describe an arbitrary event-specific parameter. This might be an environmental parameter, an instrument setting or input, or an event-specific sampling parameter that is not tightly bound to either the feature-of-interest or to the observation procedure (6.2.2.10).', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.TermMeasurementParameter', verbose_name='parameter')),
                ('quality', models.ForeignKey(blank=True, help_text='The quality of the result', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.Quantity')),
            ],
        ),
        migrations.AddField(
            model_name='management',
            name='groundwater_use',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.TermGroundwaterUse'),
        ),
        migrations.AddField(
            model_name='management',
            name='license',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.License'),
        ),
        migrations.AddField(
            model_name='hydrogeologyparameter',
            name='aquifer_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.TermAquiferType'),
        ),
        migrations.AddField(
            model_name='hydrogeologyparameter',
            name='confinement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.TermConfinement'),
        ),
        migrations.AddField(
            model_name='hydrogeologyparameter',
            name='pumping_test',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.PumpingTest'),
        ),
        migrations.AddField(
            model_name='hydrogeologyparameter',
            name='thickness',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.Quantity'),
        ),
        migrations.CreateModel(
            name='GeologyLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material', models.CharField(blank=True, help_text='Material of the log.', max_length=512, null=True)),
                ('geological_unit', models.CharField(blank=True, help_text='Geological unit of the log.', max_length=256, null=True)),
                ('bottom_depth', models.ForeignKey(blank=True, help_text='Bottom depth of the log', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='geology_log_bottom_depth', to='gwml2.Quantity')),
                ('geology', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gwml2.Geology')),
                ('top_depth', models.ForeignKey(blank=True, help_text='Top depth of the log', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='geology_log_top_depth', to='gwml2.Quantity')),
            ],
        ),
        migrations.AddField(
            model_name='geology',
            name='total_depth',
            field=models.ForeignKey(blank=True, help_text='Total depth of geology', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.Quantity'),
        ),
        migrations.AddField(
            model_name='drillingandconstruction',
            name='drilling_method',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.TermDrillingMethod'),
        ),
        migrations.CreateModel(
            name='Casing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material', models.CharField(blank=True, help_text='material of the feature.', max_length=512, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('bottom_depth', models.ForeignKey(blank=True, help_text='Bottom depth of the feature', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='casing_bottom_depth', to='gwml2.Quantity')),
                ('diameter', models.ForeignKey(blank=True, help_text='Diameter of the feature', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='casing_diameter', to='gwml2.Quantity')),
                ('drilling_and_construction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.DrillingAndConstruction')),
                ('top_depth', models.ForeignKey(blank=True, help_text='Top depth of the feature', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='casing_top_depth', to='gwml2.Quantity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WellMeasurement',
            fields=[
                ('measurement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gwml2.Measurement')),
                ('well', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gwml2.Well')),
            ],
            bases=('gwml2.measurement',),
        ),
        migrations.CreateModel(
            name='SpringMeasurement',
            fields=[
                ('measurement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gwml2.Measurement')),
                ('spring', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gwml2.Spring')),
            ],
            bases=('gwml2.measurement',),
        ),
    ]
